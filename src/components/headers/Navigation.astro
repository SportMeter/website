---
import { Image } from "astro:assets";
import { getLocalizedSettings } from "@/lib/localization-helpers";
import { translatePath, unlocalizedUrl } from "@/lib/localization-helpers";
import { defaultLocale, locales } from "site";

const currentLocale = Astro.currentLocale;

function getTranslatedUrl(locale: string): string {
	const unlocalizedPath = unlocalizedUrl(Astro.url.pathname);
	return translatePath(locale, unlocalizedPath);
}

function isActiveLocale(locale: string): boolean {
	return locale === currentLocale;
}

const { header, contacts } = getLocalizedSettings(currentLocale);

const logoPath = header.logo?.imagePath;

const images = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/global/**/*.{webp,jpeg,jpg,png,gif,svg}",
);
---

<style>
	.menu-icon {
		position: relative;
		width: 50px;
		height: 50px;
		cursor: pointer;
	}
	.menu-icon .menu-icon__checkbox {
		display: block;
		width: 100%;
		height: 100%;
		position: relative;
		cursor: pointer;
		z-index: 2;
		-webkit-touch-callout: none;
		position: absolute;
		opacity: 0;
	}
	.menu-icon div {
		margin: auto;
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		bottom: 0;
		width: 22px;
		height: 12px;
	}
	.menu-icon span {
		position: absolute;
		display: block;
		width: 100%;
		height: 2px;
		background-color: var(--bar-bg, #000);
		border-radius: 5rem;
		transition: all 0.2s cubic-bezier(0.1, 0.82, 0.76, 0.965);
	}
	.menu-icon span:first-of-type {
		top: 0;
	}
	.menu-icon span:last-of-type {
		bottom: 0;
	}
	.menu-icon.active span:first-of-type,
	.menu-icon .menu-icon__checkbox:checked + div span:first-of-type {
		transform: rotate(45deg);
		top: 5px;
	}
	.menu-icon.active span:last-of-type,
	.menu-icon .menu-icon__checkbox:checked + div span:last-of-type {
		transform: rotate(-45deg);
		bottom: 5px;
	}
	.menu-icon.active:hover span:first-of-type,
	.menu-icon.active:hover span:last-of-type,
	.menu-icon:hover .menu-icon__checkbox:checked + div span:first-of-type,
	.menu-icon:hover .menu-icon__checkbox:checked + div span:last-of-type {
		width: 22px;
	}
	@media (min-width: 1024px) {
		.menu-icon:hover span:first-of-type {
			width: 26px;
		}
		.menu-icon:hover span:last-of-type {
			width: 12px;
		}
	}
	#navigation {
		pointer-events: none;
	}
	#main-header {
		backdrop-filter: blur(0px);
		-webkit-backdrop-filter: blur(0px);
		transition: backdrop-filter 0.3s ease-out;
		mask-image: linear-gradient(to top, transparent 10%, black 60%);
		-webkit-mask-image: linear-gradient(to top, transparent 10%, black 60%);
	}
	[data-nav-border-reveal] {
		--tw-border-opacity: 0;
	}
	.active-locale {
		font-weight: bolder;
	}

	/* Logo animation styles */
	.logo-letter {
		opacity: 0;
		transform: translateX(50px);
	}
</style>

<style is:global>
	[data-nav-text-reveal] {
		opacity: 0;
	}
	[data-nav-text-reveal] > div {
		position: relative;
		margin: 0;
	}
	.split-parent {
		overflow: hidden;
	}
	.split-child {
		display: inline-block;
	}
</style>

<header class="fixed w-full z-30">
	<div
		id="main-header"
		class="items-center auto-cols-fr grid-cols-2 lg:grid-cols-2 grid-rows-[auto] justify-between left-0 py-2 px-6 lg:px-20 right-0 top-0 grid gap-4"
	>
		<div
			class="items-center flex-wrap justify-start relative flex text-blue-700 z-20"
		>
			<a
				href={translatePath(currentLocale ?? defaultLocale, "/")}
				id="header-logo"
				class="text-blue-700 justify-self-start lg:justify-self-center underline inline-block max-w-full"
			>
				<svg
					version="1.1"
					id="CompanyLogo"
					xmlns="http://www.w3.org/2000/svg"
					xmlns:xlink="http://www.w3.org/1999/xlink"
					x="0px"
					y="0px"
					viewBox="0 0 400 130"
					width={50}
					height={50}
					class="w-16 h-12 lg:w-20 lg:h-20"
					xml:space="preserve"
				>
					<!-- Main logo icon (non-animated) -->
					<path d="M114.218 0.431274L82.1309 31.0703L50.3209 0.431274H0.900879V128.844C25.6439 128.844 49.8989 121.951 70.9439 108.938L82.4939 101.796C92.0389 95.5973 89.7819 87.7633 81.3189 82.9803L55.6699 69.3993C50.1949 66.6013 50.2459 62.0933 55.8069 60.7163L125.788 43.3913L76.7229 59.3513C69.2419 61.7223 68.6739 63.2763 71.6299 64.6383L104.719 77.8543C114.724 81.6503 118.124 94.0973 111.437 102.452L90.3149 128.844H163.639V0.431274H114.218Z" fill="black"/>
					
					<!-- Animated letters -->
					<g class="logo-letter" data-letter="s">
						<path d="M215.501 52.0722C198.401 52.0722 196.651 44.8222 196.651 40.4222H205.251C205.251 43.2222 207.251 45.4722 215.501 45.4722C224.201 45.4722 225.651 43.7222 225.651 41.4722C225.651 40.1222 224.801 39.3222 223.051 38.9222C221.001 38.4722 215.951 38.2722 212.301 38.0722C207.951 37.8222 203.151 37.2722 200.451 35.8722C198.051 34.6222 196.451 32.2722 196.451 29.0722C196.451 22.9722 202.351 17.9722 215.401 17.9722C231.051 17.9722 233.751 23.3722 233.751 29.3222H225.151C225.151 26.3222 222.201 24.5722 215.401 24.5722C208.801 24.5722 206.051 26.0222 206.051 28.3722C206.051 29.6222 206.751 30.3722 208.151 30.8222C209.951 31.3722 214.901 31.5722 218.601 31.8222C223.401 32.1222 227.501 32.5222 230.301 33.6722C233.451 34.9722 235.251 37.5722 235.251 40.7722C235.251 45.9222 232.451 52.0722 215.501 52.0722Z" fill="black"/>
						<path d="M198.201 114.472V81.5722H206.051L220.451 109.072H220.501L234.851 81.5722H242.601V114.472H237.901V84.9222H237.851L222.151 114.472H218.601L202.801 84.9222H202.701V114.472H198.201Z" fill="black"/>
					</g>
					
					<g class="logo-letter" data-letter="p">
						<path d="M240.124 51.4722V18.5722H259.924C271.174 18.5722 276.124 22.5222 276.124 30.3722C276.124 37.8722 271.274 41.7722 259.674 41.7722H249.724V51.4722H240.124ZM249.724 35.6722H259.474C264.624 35.6722 267.024 34.0722 267.024 30.6722C267.024 27.4222 264.874 25.6722 259.524 25.6722H249.724V35.6722Z" fill="black"/>
						<path d="M250.106 114.472V81.5722H280.206V85.6722H254.806V96.0722H275.206V99.7722H254.806V110.372H280.706V114.472H250.106Z" fill="black"/>
					</g>
					
					<g class="logo-letter" data-letter="o">
						<path d="M300.712 52.0722C285.812 52.0722 279.112 44.7222 279.112 34.8722C279.112 25.7722 285.862 17.9722 300.712 17.9722C315.562 17.9722 322.312 25.7722 322.312 34.8722C322.312 44.2222 316.062 52.0722 300.712 52.0722ZM300.712 44.9722C308.762 44.9722 312.212 40.5722 312.212 34.9222C312.212 29.5722 308.512 25.0722 300.712 25.0722C292.912 25.0722 289.212 29.5722 289.212 34.9222C289.212 40.8222 292.862 44.9722 300.712 44.9722Z" fill="black"/>
						<path d="M299.578 114.472V85.6722H284.328V81.5722H319.528V85.6722H304.278V114.472H299.578Z" fill="black"/>
					</g>
					
					<g class="logo-letter" data-letter="r">
						<path d="M326.891 51.4722V18.5722H347.591C359.791 18.5722 363.591 22.4222 363.591 28.3222C363.591 31.6222 362.191 34.8222 357.641 36.1722V36.2722C362.841 37.4722 363.391 41.1222 363.391 44.5722V51.4722H353.791V44.5722C353.791 41.1722 352.491 39.6222 348.391 39.6222H336.491V51.4722H326.891ZM336.491 34.0222H348.041C352.791 34.0222 354.491 32.2722 354.491 29.7222C354.491 27.3722 352.741 25.6722 347.191 25.6722H336.491V34.0222Z" fill="black"/>
						<path d="M324.666 114.472V81.5722H354.766V85.6722H329.366V96.0722H349.766V99.7722H329.366V110.372H355.266V114.472H324.666Z" fill="black"/>
					</g>
					
					<g class="logo-letter" data-letter="t">
						<path d="M379.55 51.4722V25.6722H366.6V18.5722H402.1V25.6722H389.15V51.4722H379.55Z" fill="black"/>
						<path d="M361.239 114.472V81.5722H381.939C391.889 81.5722 396.439 85.2722 396.439 91.0722C396.439 94.8722 394.139 97.8722 390.139 98.8222V98.9222C394.389 99.7222 396.239 102.772 396.239 107.422V114.472H391.539V107.422C391.539 103.222 389.239 101.072 383.989 101.072H365.939V114.472H361.239ZM365.939 97.3722H383.139C389.139 97.3722 392.039 95.1222 392.039 91.6222C392.039 87.9722 388.939 85.6722 381.289 85.6722H365.939V97.3722Z" fill="black"/>
					</g>
				</svg>
			</a>
		</div>
		<div
			class="col-start-2 hidden lg:flex justify-center items-center h-full"
		>
			<a
				data-company-name
				class="pb-4 group"
				href={translatePath(currentLocale ?? defaultLocale, "/")}
			>
				<div
					class="w-20 h-1 bg-slate-200 rounded-full group-hover:bg-slate-600 transition-colors duration-500"
				>
				</div>
			</a>
		</div>
		<div class="justify-self-end col-span-1 row-span-1 z-40 col-start-3">
			<div
				class="items-center justify-center relative flex h-10 lg:w-16 lg:h-16"
			>
				<div class="menu-icon">
					<input
						id="menu-toggle"
						class="menu-icon__checkbox"
						type="checkbox"
					/>
					<div>
						<span></span>
						<span></span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<nav
		id="navigation"
		class="items-center bottom-0 text-sm font-medium justify-center left-0 fixed right-0 top-0 flex h-screen z-30"
	>
		<div
			id="navigation-background"
			class="bg-white w-full h-full absolute top-0 left-0 opacity-0"
		>
		</div>
		<div
			class="items-center font-semibold flex-wrap justify-center flex flex-col overflow-hidden z-20 w-full"
		>
			<div class="flex flex-col items-start md:items-center pt-10">
				{
					header.pages.map((page, index) => (
						<a
							data-nav-item
							href={translatePath(
								currentLocale ?? defaultLocale,
								page.link,
							)}
							class="items-center justify-start flex overflow-hidden gap-4 relative pr-10"
						>
							<div
								data-nav-border-reveal
								data-nav-text-reveal
								class="text-black items-center cursor-pointer justify-center pt-1 flex w-9 h-9 border-2 border-black border-solid rounded-full"
							>
								0{index + 1}
							</div>
							<div
								data-nav-text-reveal
								class="cursor-pointer overflow-hidden text-4xl xs:text-5xl md:text-[5.63rem] !leading-[1.15] text-black"
							>
								{page.title}
							</div>
						</a>
					))
				}
				<div class="flex gap-8 pt-10 pl-16 md:pl-0">
					{
						locales.map((locale) => (
							<a
								href={getTranslatedUrl(locale)}
								class:list={[
									"items-center justify-start flex overflow-hidden gap-4 relative cursor-pointer",
									isActiveLocale(locale) && "active-locale",
								]}
							>
								<span
									data-nav-text-reveal
									class="overflow-hidden text-md xs:text-lg md:text-xl !leading-[1.15] text-black"
								>
									<span>{locale}</span>
								</span>
							</a>
						))
					}
				</div>
			</div>
		</div>
	</nav>
</header>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	// Uncomment if you have premium version of gsap
	// import { SplitText } from "gsap/SplitText";
	// import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";
	import { BlurPlugin } from "@/utils/gsap-blur";
	import { LifecycleManager } from "@/utils/lifecycle-manager";

	gsap.registerPlugin(
		ScrollTrigger,
		/*SplitText, DrawSVGPlugin,*/
		BlurPlugin,
	);

	const lm = new LifecycleManager();

	lm.onElementLoaded("navigation", (ctx) => {
		ctx?.add(() => {
			// Logo letters animation - letters slide in from right to left
			const logoLetters = gsap.utils.toArray(".logo-letter");
			
			gsap.fromTo(logoLetters, 
				{
					opacity: 0,
					x: 50
				},
				{
					opacity: 1,
					x: 0,
					duration: 0.6,
					ease: "power2.out",
					stagger: 0.1, // Each letter animates 0.1s after the previous
					delay: 0.2 // Small delay before animation starts
				}
			);

			gsap.timeline({
				defaults: {
					ease: "power1.inOut",
					stagger: 0.2,
				},
				scrollTrigger: {
					trigger: "body",
					start: "50px",
					toggleActions: "play none none reverse",
				},
			})
				.to("[data-company-name]", { opacity: 0 })
				.to("#main-header", { backdropFilter: "blur(5px)", "-webkit-backdrop-filter": "blur(5px)" }, "<")
				

			const tl = gsap.timeline({
				paused: true,
				defaults: {
					duration: 1,
					ease: "power3.out",
				},
			});

			// const childSplit = new SplitText("[data-nav-text-reveal]", {
			// 	type: "lines",
			// 	linesClass: "split-child",
			// });
			// const parentSplit = new SplitText("[data-nav-text-reveal]", {
			// 	// type: "lines",
			// 	linesClass: "split-parent",
			// });

			tl.set("#navigation", { pointerEvents: "auto" })
				.to("#navigation-background", { opacity: 1 }, "<")
				.to(
					"[data-nav-text-reveal]",
					{ opacity: 1, duration: 0.5, ease: "none" },
					"<=0.5",
				);
			// .from(
			// 	childSplit.lines,
			// 	{
			// 		duration: 1,
			// 		yPercent: 300,
			// 		skewY: 7,
			// 		stagger: 0.02,
			// 	},
			// 	"<",
			// );

			const menuItems = gsap.utils.toArray(
				"[data-nav-item]",
			) as HTMLElement[];

			menuItems.forEach((menuItem) => {
				const menuItemTl = gsap
					.timeline({
						defaults: { duration: 0.4, ease: "none" },
						paused: true,
					})
					.to(menuItem, {
						blur: 2,
					})
					.to(menuItem, {
						blur: 1,
					});
				menuItem.addEventListener("mouseenter", (e) =>
					menuItemTl.play(),
				);
				menuItem.addEventListener("mouseleave", (e) =>
					menuItemTl.pause(0),
				);
			});

			// Get the checkbox
			const menuToggle = document.getElementById("menu-toggle");

			// Add an event listener to the checkbox
			menuToggle?.addEventListener("change", function () {
				if ((this as HTMLInputElement).checked) {
					tl.play();
				} else {
					tl.reverse();
				}
			});
		});
	});
</script>
